source('D:/Projects/80-Cereals/cereal_homewor1.R')
library(UsingR)
install.packages("UsingR", dependencies = TRUE)
library(UsingR)
getwd()
cereal.dataset = read.csv("D:/Projects/80-Cereals/cereal.csv", header = TRUE)
View(cereal.dataset)
cereal.dataset
attach(cereal.dataset)
class(cereal.dataset)
set.seed(71781)
cereal.sample.int = sample(1: nrow(cereal.dataset), 50, replace = FALSE)
cereal.dataset.sample = cereal.dataset[cereal.sample.int,]
detach(cereal.dataset)
attach(cereal.dataset.sample)
View(cereal.dataset.sample)
cereal.dataset.sample = cereal.dataset.sample[complete.cases(cereal.dataset.sample), ]
cereal.dataset.sample = cereal.dataset.sample[fat>=0 & calories >=0 & sodium >=0 & carbo>=0
& fiber>=0 & sugars >=0 & potass>=0 ,]
summary(cereal.dataset.sample)
cereal.max.protein = cereal.dataset.sample[protein == max(protein),]
cereal.min.protein = cereal.dataset.sample[protein == min(protein),]
nrow(cereal.dataset.sample[calories <= 100 & sugars==0 ,])
calories.cup = round(as.numeric(calories) / as.numeric(cups))
cat("Range of calories per weight:", min(calories, na.rm = TRUE), "-",
max(calories, na.rm = TRUE), "\n")
cat("Range of calories per cup:", min(calories.cup, na.rm = TRUE), "-",
max(calories.cup, na.rm = TRUE), "\n")
factor(cereal.dataset$mfr)
factor(mfr)
barplot(table(mfr),
col = c("red", "blue","green" ,"yellow" ,"pink" ,"purple","orange"),
main = "Manifacturers",
ylab = "Quantity")
barplot(table(type ,mfr),col = c("navy","purple"),main = "Productions of mfrs",legend.text = T)
hist(rating,probability = TRUE )
lines(density(rating),col="red")
rug(jitter(rating))
hist(rating,probability = TRUE )
lines(density(rating),col="red")
rug(jitter(rating))
boxplot(calories~mfr)
barplot(table(mfr),
col = c("red", "blue","green" ,"yellow" ,"pink" ,"purple","orange"),
main = "Manifacturers",
ylab = "Quantity")
barplot(table(mfr),
col = c("red", "blue","green" ,"yellow" ,"pink" ,"purple","orange"),
main = "Manifacturers",
ylab = "Quantity")
barplot(table(type ,mfr),col = c("navy","purple"),main = "Productions of mfrs",legend.text = T)
boxplot(calories~mfr)
plot(cereal.dataset.sample)
plot(sugars,rating)
library(ggplot2)
ggplot(data=cereal.dataset.sample,aes(x=sugars,y=calories,col=rating))+
geom_jitter(data=cereal.dataset.sample, aes(sugars,calories,col=rating))+
labs(x="Sugar",y="Calories")+
geom_smooth(method="lm",se=FALSE,col='black')+
theme_bw()
ggplot(data=cereal.dataset.sample,aes(x=sugars,y=calories,col=rating))+
geom_jitter(data=cereal.dataset.sample, aes(sugars,calories,col=rating))+
labs(x="Sugar",y="Calories")+
geom_smooth(method="lm",se=FALSE,col='black')+
theme_bw()
plot(sugars,rating)
ggplot(data=cereal.dataset.sample,aes(x=sugars,y=calories,col=rating))+
geom_jitter(data=cereal.dataset.sample, aes(sugars,calories,col=rating))+
labs(x="Sugar",y="Calories")+
geom_smooth(method="lm",se=FALSE,col='black')+
theme_bw()
simple.lm(sugars,rating)
abline(lm(rating~sugars))
abline(rlm(rating~sugars),lty=4)
simple.lm(sugars,rating)
abline(lm(rating~sugars))
abline(lm(rating~sugars))
abline(rlm(rating~sugars),lty=4)
plot(sugars,rating)
simple.lm(sugars,rating)
plot(sugars,rating)
simple.lm(sugars,rating)
ggplot(data=cereal.dataset.sample,aes(x=sugars,y=calories,col=rating))+
geom_jitter(data=cereal.dataset.sample, aes(sugars,calories,col=rating))+
labs(x="Sugar",y="Calories")+
geom_smooth(method="lm",se=FALSE,col='black')+
theme_bw()
simple.lm(sugars,rating)
abline(lm(rating~sugars))
abline(rlm(rating~sugars),lty=4)
cor(sugars,rating)
identify(sugars,rating,n=2)
identify(sugars,rating,n=2)
calories.categories = cut(calories,breaks = c(min(calories)-1,quantile(calories,.25),
quantile(calories,.75),max(calories)))
prop.table(table(calories.categories))
medium.cal.prob = prop.table(table(calories.categories))[2]
medium.cal.prob
prop.test(20,length(calories),medium.cal.prob)
calories.categories = cut(calories,breaks = c(min(calories)-1,quantile(calories,.25),
quantile(calories,.75),max(calories)))
calories.categories
prop.table(table(calories.categories))
medium.cal.prob = prop.table(table(calories.categories))[2]
medium.cal.prob
prop.test(20,length(calories),medium.cal.prob)
prop.table(table(calories.categories))
medium.cal.prob = prop.table(table(calories.categories))[2]
medium.cal.prob
prop.test(20,length(calories),medium.cal.prob)
levels(calories.categories) = c("low cal","medium cal","high cal");
barplot(table(calories.categories),col = c("red","green","blue"))
carbo.categories = cut(carbo,breaks = c(min(carbo)-1,quantile(carbo,.25),quantile(carbo,.75),max(carbo)))
levels(carbo.categories) = c("low carbo","medium carbo","high carbo");
barplot(table(calories.categories,carbo.categories),col = c("red","green","blue"),beside = TRUE,legend.text = T)
simple.hist.and.boxplot(sodium)
boxplot(scale(sugars),scale(carbo))
simple.hist.and.boxplot(sodium)
boxplot(scale(sugars),scale(carbo))
simple.hist.and.boxplot(sodium)
simple.hist.and.boxplot(sodium)
boxplot(scale(sugars),scale(carbo))
simple.hist.and.boxplot(sodium)
boxplot(scale(sugars),scale(carbo))
simple.hist.and.boxplot(sodium)
simple.hist.and.boxplot(sodium,boxplot(scale(sugars),scale(carbo)))
simple.hist.and.boxplot(sodium, laina)
laina = boxplot(scale(sugars),scale(carbo))
simple.hist.and.boxplot(sodium, laina)
simple.hist.and.boxplot(sodium, sugars)
simple.hist.and.boxplot(sodium, sugars)
simple.hist.and.boxplot(sodium)
boxplot(scale(sugars),scale(carbo))
simple.violinplot(scale(protein),scale(fat))
dbinom(25,50,0.42)
View(laina)
pnorm(100, mean(calories), sd(calories), lower.tail=FALSE)
View(cereal.dataset.sample)
library(fitdistrplus)
library(logspline)
install.packages("logspline")
install.packages("fitdistrplus")
library(fitdistrplus)
library(logspline)
library(fitdistrplus)
descdist(potass, discrete = TRUE)
descdist(potass, discrete = TRUE)
fit.nbinom = fitdist(potass, "nbinom")
fit.pois = fitdist(potass, "pois")
plot(fit.nbinom)
plot(fit.pois)
plot(fit.nbinom)
plot(fit.nbinom)
plot(fit.pois)
plot(fit.nbinom)
plot(fit.nbinom)
plot(fit.pois)
plot(fit.nbinom)
plot(fit.pois)
hist(potass,probability = TRUE)
lines(density(potass),col="red")
rug(jitter(potass))
descdist(calories, discrete = TRUE)
hist(potass,probability = TRUE)
lines(density(potass),col="red")
rug(jitter(potass))
descdist(calories, discrete = TRUE)
hist(calories,probability = TRUE)
lines(density(calories),col="red")
rug(jitter(calories))
descdist(calories, discrete = TRUE)
descdist(fat, discrete = TRUE)
fat.fit.nbinom = fitdist(fat, "nbinom")
plot(fat.fit.nbinom)
hist(fat,probability = TRUE)
lines(density(fat),col="red")
rug(jitter(fat))
descdist(protein, discrete = TRUE)
shapiro.test(protein)
protein.fit.pois = fitdist(protein, "pois")
plot(protein.fit.pois)
shapiro.test(fiber)
descdist(fiber, discrete = TRUE)
plot(fiber.fit.nbinom)
hist(fiber,probability = TRUE)
lines(density(fiber),col="red")
rug(jitter(fiber))
descdist(sodium, discrete = TRUE)
sodium.fit.norm = fitdist(sodium, "norm")
plot(sodium.fit.norm)
hist(sodium,probability = TRUE)
lines(density(sodium),col="red")
rug(jitter(sodium))
shapiro.test(sugars)
qnorm(p=.25,mean(calories),sd(calories),lower.tail = TRUE)
dens = dnorm(calories,mean(calories),sd(calories))
plot(calories,dens)
abline(v=mean(calories))
carbo.avg = mean(carbo)
error = qnorm(.975) * sd(carbo) / sqrt(length(carbo))
cat("confidence interval for carbo:", carbo.avg - error, "-",
carbo.avg + error, "\n")
predict(lm(carbo~sugars),data.frame(sugars=10),interval = "confidence")
plot(fat,sodium)
fat.values = unique(fat)
n_groups = length(fat.values)
sample_mean = rep(NA,n_groups)
cis = matrix(nrow = n_groups,ncol = 2)
for (i in 1:n_groups){
#extract relevant data
rows = which(fat==fat.values[i])
observations = sodium[rows]
#store sample mean
sample_mean[i] = mean(observations)
#construct ci
stdev = sd(observations)
n = length(observations)
se_mean = stdev / sqrt(n)
#store ci (confidence interval)
cis[i,1] = sample_mean[i] - 2*se_mean
cis[i,2] = sample_mean[i] + 2*se_mean
}
points(x=fat.values,y=sample_mean,col="red" , cex= 2)
segments(x0=fat.values,x1=fat.values, y0= cis[,1],y1 =cis[,2],
col = "red" , lwd = 2)
carbo.mean = mean(carbo)
carbo.sd = sd(carbo)
mu0 = 15 #hypothesis value
carbo.length = length(carbo)
z = (carbo.mean - mu0)/(carbo.sd/sqrt(carbo.length))
pnorm(z) > 0.05
pnorm(z) > 0.05
cal.mean = mean(calories)
cal.sd = sd(calories)
cal.mu0 = 100 ; # hypothesized value
cal.length = length(calories)
cal.z = (cal.mean - cal.mu0)/(cal.sd/sqrt(cal.length))
pnorm(cal.z, lower.tail=FALSE) < 0.05
prop.test(21,cal.length, p=.5, alt="less", correct=FALSE)
pnorm(z) > 0.05
cal.mean = mean(calories)
cal.z = (cal.mean - cal.mu0)/(cal.sd/sqrt(cal.length))
pnorm(cal.z, lower.tail=FALSE) < 0.05
prop.test(21,cal.length, p=.5, alt="less", correct=FALSE)
source('D:/Projects/80-Cereals/cereal_homewor1.R')
prop.test(21,cal.length, p=.5, alt="less", correct=FALSE)
source('D:/Projects/80-Cereals/cereal_homewor1.R')
